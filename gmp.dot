digraph {
    subgraph cluster_main_process {
        label = "Main Process";
        GeckoMediaPluginServiceParent -> GMPParent
        GMPParent -> main_GMPContentParent

        main_GMPContentParent [label="GMPContentParent\n(exists here to pass bridged\nendpoint to content processes)", style=filled, fillcolor=khaki]
        GeckoMediaPluginServiceParent [label="GeckoMediaPluginServiceParent\n(extends GeckoMediaPluginService)"]
        GMPServiceParent [style=filled, fillcolor=khaki]
        GMPParent [label="GMPParent\n(one per plugin type,\nplus a clone for every\nactve instance)", style=filled, fillcolor=khaki]
        GMPTimerParent [style=filled, fillcolor=khaki]
        GMPStorageParent [style=filled, fillcolor=khaki]

        GeckoMediaPluginServiceParent -> GMPServiceParent
        GMPParent -> GMPStorageParent
        GMPStorageParent [label="GMPStorageParent"]
        GMPParent -> GMPTimerParent

        GMPProvider [label="GMPProvider\nJavaScript, Firefox front end,\nmanages plugins", shape=box, style=filled, fillcolor=plum]
        GMPInstallManager [label="GMPInstallManager\nJavaScript, Firefox front end,\nmanages plugin install", shape=box, style=filled, fillcolor=plum]
        GMPDownloader [label="GMPDownloader\nJavaScript, Firefox front end,\nmanages plugin download", shape=box, style=filled, fillcolor=plum]
        GMPProvider -> GeckoMediaPluginServiceParent [label="  addPluginDir()"]
        GMPDownloader -> GMPInstallManager
        GMPInstallManager -> GMPProvider
        {rank=same GMPProvider GMPInstallManager GMPDownloader}

        GMPDiskStorage [label="GMPDiskStorage\nUsed in normal\n(non-private) browsing mode"]
        GMPMemStorage [label="GMPMemStorage\nUsed in private browsing mode"]

        GMPStorageParent -> GMPDiskStorage
        GMPStorageParent -> GMPMemStorage

    }

    main_GMPContentParent -> content_GMPContentParent [style=dotted, label="bridged to"]

    subgraph cluster_gmp_process {
        label = "GMP/CDM Process"

        GMPAdapter [label="GMPAdapter\nAdapts Widevine\nlib to GMP lib API"]
        GMPStorageChild [label="GMPStorageChild\nProvides API for\n storage to CDM", style=filled, fillcolor=khaki]
        ChromiumCDMChild [label="ChromiumCDMChild\nImplements cdm::Host", style=filled, fillcolor=khaki]
        GMPTimerChild [style=filled, fillcolor=khaki]
        GMPChild [style=filled, fillcolor=khaki]
        GMPVideoDecoderChild [style=filled, fillcolor=khaki]
        GMPVideoEncoderChild [style=filled, fillcolor=khaki]
        GMPContentChild [style=filled, fillcolor=khaki]

        GMPChild -> GMPLoader
        GMPChild -> GMPAdapter
        GMPAdapter -> GMPLoader
        GMPLoader -> cdm [label="Loads via GMPAdapter"]
        SandboxStarter -> GMPLoader

        cdm [label="cdm::ContentDecryptionModule"]
        GMPChild -> GMPContentChild
        GMPChild -> GMPTimerChild
        GMPChild -> GMPStorageChild

        GMPContentChild -> ChromiumCDMChild
        GMPContentChild -> GMPVideoDecoderChild
        GMPContentChild -> GMPVideoEncoderChild

        edge[dir=both]
        ChromiumCDMChild -> cdm
        GMPContentChild [label="GMPContentChild\n(holds child actors\n of active protocols which\ntalk to content process"]
    }

    subgraph cluster_content_process {
        label = "Content Process"

        GMPServiceChild
        GeckoMediaPluginServiceChild -> GMPServiceChild

        WebRTC [label="WebRTC", shape=box, style=filled, fillcolor=lightblue]

        content_GMPContentParent [label="GMPContentParent\nholds parent actors of active\nprotocols which talk to GMP process", style=filled, fillcolor=khaki]
        ChromiumCDMProxy [label="ChromiumCDMProxy\n(proxies to GMP thread)"]
        ChromiumCDMCallbackProxy [label="ChromiumCDMCallbackProxy\n(proxies to GMP thread)"]
        CDMCaps [label="CDMCaps\n(stores key usability)"]
        SamplesWaitingForKeys [label="SamplesWaitingForKeys\n(ensures samples have all\nkeys required to decrypt\nbefore sending to CDM)"]
        ChromiumCDMVideoDecoder [label="ChromiumCDMVideoDecoder\n(extends MediaDataDecoder,\ndecrypts & decodes samples)"]
        EMEDecryptor [label="EMEDecryptor\n(extends MediaDataDecoder,\ndecrypts via CDM,\ndecodes via wrapped\nplatform decoder)"]
        MediaKeys [label="MediaKeys\nWebIDL binding", shape=box, style=filled, fillcolor=yellow]
        MediaKeySession [label="MediaKeySession\nWebIDL binding", shape=box, style=filled, fillcolor=yellow]
        HTMLMediaElement [label="HTMLMediaElement\nWebIDL binding", shape=box, style=filled, fillcolor=yellow]
        MediaKeysGMPCrashHelper [label="MediaKeysGMPCrashHelper\n(accesses WindowID so crash\nreport goes to correct tab)"]
        ChromiumCDMParent [label="ChromiumCDMParent\n(extends GMPCrashHelperHolder,\nmain actor to send commands to CDM)", style=filled, fillcolor=khaki]
        GeckoMediaPluginServiceChild [label="GeckoMediaPluginServiceChild\n(extends GeckoMediaPluginService)"]
        EMEDecoderModule [label="EMEDecoderModule\n(passes ChromiumCDMProxy\nto new decryptors & decoders)"]
        MediaDecoder [label="MediaDecoder\n(Facade, controls lifecycle\nfor playback pipeline)"]
        PDMFactory [label="PDMFactory\n(Creates decoders using PDMs)"]
        MediaDecoderStateMachine [label="MediaDecoderStateMachine\n(manages state of pipeline)"]
        MediaFormatReader [label="MediaFormatReader\n(runs demuxers & decoders)"]
        Navigator [label="Navigator\nWebIDL binding.", shape=box, style=filled, fillcolor=yellow]
        MediaKeySystemAccessManager [label="MediaKeySystemAccessManager"]
        MediaKeySystemConfig [label="MediaKeySystemConfig\nWebIDLBinding", shape=box, style=filled, fillcolor=yellow]
        MediaKeySystemAccess [label="MediaKeySystemAccess", shape=box, style=filled, fillcolor=yellow]
        GMPServiceChild [style=filled, fillcolor=khaki]
        GMPVideoDecoderParent [style=filled, fillcolor=khaki]
        GMPVideoEncoderParent [style=filled, fillcolor=khaki]

        GeckoMediaPluginServiceChild -> content_GMPContentParent
        content_GMPContentParent -> ChromiumCDMParent
        ChromiumCDMParent -> ChromiumCDMCallbackProxy
        ChromiumCDMCallbackProxy -> MediaKeys
        ChromiumCDMProxy -> MediaKeys [label="Proxies callbacks\nto main thread\nvia weak ref"]
        ChromiumCDMProxy -> ChromiumCDMParent
        ChromiumCDMProxy -> CDMCaps
        ChromiumCDMVideoDecoder -> ChromiumCDMParent
        EMEDecryptor -> ChromiumCDMParent [label="Decrypts"]
        EMEDecryptor -> MediaFormatReader
        ChromiumCDMVideoDecoder -> SamplesWaitingForKeys
        ChromiumCDMVideoDecoder -> MediaFormatReader
        EMEDecryptor -> SamplesWaitingForKeys
        {rank=same EMEDecryptor ChromiumCDMVideoDecoder}

        MediaKeys -> MediaKeySession
        MediaKeys -> ChromiumCDMProxy [label="Initiates\nCDM\ncreation"]
        MediaKeysGMPCrashHelper -> MediaKeys
        ChromiumCDMParent -> MediaKeysGMPCrashHelper
        GeckoMediaPluginServiceChild -> MediaKeysGMPCrashHelper [label="On crash,\ngets WindowID"]
        HTMLMediaElement -> MediaKeys [label="via setMediaKeys()"]

        EMEDecoderModule -> EMEDecryptor [label="creates"]
        EMEDecoderModule -> ChromiumCDMVideoDecoder [label="creates"]
        EMEDecoderModule -> ChromiumCDMProxy

        MediaFormatReader -> PDMFactory
        PDMFactory -> EMEDecoderModule

        content_GMPContentParent -> GMPVideoDecoderParent
        content_GMPContentParent -> GMPVideoEncoderParent

        GMPVideoDecoderParent -> WebrtcGmpVideoDecoder
        GMPVideoEncoderParent -> WebrtcGmpVideoEncoder

        WebrtcGmpVideoDecoder -> WebRTC
        WebrtcGmpVideoEncoder -> WebRTC

        Navigator -> MediaKeySystemAccessManager
        MediaKeySystemAccess -> MediaKeys
        MediaKeySystemConfig -> MediaKeySystemAccessManager
        MediaKeySystemAccessManager -> MediaKeySystemAccess

        edge[dir=both]
        CDMCaps -> SamplesWaitingForKeys [label="Ensures keys usable\nbefore decrypt/decode"]
        HTMLMediaElement -> MediaDecoder
        MediaDecoder -> MediaDecoderStateMachine
        MediaDecoderStateMachine -> MediaFormatReader
    }

    edge[dir=both]
    GMPParent -> GMPChild [label=PGMP]
    GMPServiceParent -> GMPServiceChild [label="PGMPService"]
    ChromiumCDMParent -> ChromiumCDMChild [label="PChromiumCDM"]
    GMPContentChild -> content_GMPContentParent
    GMPStorageParent -> GMPStorageChild [label="PGMPStorage"]
    GMPTimerParent -> GMPTimerChild [label="PGMPTimer"]

    GMPVideoDecoderParent -> GMPVideoDecoderChild
    GMPVideoEncoderParent -> GMPVideoEncoderChild

    // Use invisible edge to try to force main process to appear over GMP process.
    edge[style="invis"]
    GMPMemStorage -> GMPChild
}